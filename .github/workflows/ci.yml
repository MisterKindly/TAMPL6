name: CI

on:
  push:
    branches: [main, master]
    tags: ['*']
  pull_request:
    branches: [main, master]

jobs:
  build_on_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - c_compiler: gcc
          - c_compiler: clang

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Prepare build
        run: cmake -H. -B_build -DCMAKE_C_COMPILER=${{matrix.c_compiler}}
        
      - name: Build project
        run: cmake --build _build
        
      - name: Run tests
        run: |
          echo "8 10 2" | _build/bin/solver_app
          _build/bin/hello
          
      - name: Package preparation (DEB/RPM)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm
          cmake -H. -B_build_package -DCPACK_GENERATOR="DEB;RPM"
          
      - name: Create Linux packages
        if: startsWith(github.ref, 'refs/tags/')
        run: cmake --build _build_package --target package
        
      - name: Upload Linux packages
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: linux-packages
          path: _build_package/*.deb
          retention-days: 5

  build_on_windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - build_type: Debug
          - build_type: Release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Prepare build
        run: cmake -S . -B _build
      
      - name: Build project
        run: cmake --build _build --config ${{matrix.build_type}}
      
      - name: Run tests
        run: |
          Write-Output "8 10 2" | _build\bin\${{matrix.build_type}}\solver_app.exe
          _build\bin\${{matrix.build_type}}\hello.exe
      
      - name: Package preparation (MSI)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cmake -S . -B _build_package -DCPACK_GENERATOR="WIX"
          
      - name: Create Windows package
        if: startsWith(github.ref, 'refs/tags/')
        run: cmake --build _build_package --config Release --target package
        
      - name: Upload Windows package
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: windows-package
          path: _build_package/*.msi
          retention-days: 5

  build_on_macos:
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Prepare build
        run: cmake -H. -B_build
        
      - name: Build project
        run: cmake --build _build
        
      - name: Run tests
        run: |
          echo "8 10 2" | _build/bin/solver_app
          _build/bin/hello
        
      - name: Package preparation (DMG)
        run: cmake -H. -B_build_package -DCPACK_GENERATOR="DragNDrop"
        
      - name: Create macOS package
        run: cmake --build _build_package --target package
        
      - name: Upload macOS package
        uses: actions/upload-artifact@v4
        with:
          name: macos-package
          path: _build_package/*.dmg
          retention-days: 5

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build_on_linux, build_on_windows, build_on_macos]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Generate ChangeLog
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          DATE=$(date -u +'%a %b %d %Y')
          echo "* $DATE $GITHUB_ACTOR <$GITHUB_ACTOR@users.noreply.github.com> $TAG_NAME" > CHANGELOG.md
          echo "- Automated release" >> CHANGELOG.md
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            Automated package release
            - Linux: .deb packages
            - Windows: .msi installer
            - macOS: .dmg package
          files: |
            artifacts/**/*
            CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
